{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)a45e625f-1b31-4fd3-900b-f9f443a5cee1","ParentGuid":"(Guid)17cf05ba-b695-4f9d-bb8d-95eedb68808b","Name":"(string)PLC_PRG","Properties":{"@Type":"2c41fa04:IDictionary","@Value":{}},"TypeGuid":"(Guid)6f9dac99-8de1-4efc-8465-68ac443b7d08","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)a9ed5b7e-75c5-4651-af16-d2c27e98cb94","(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","Guid":"System.Guid","string":"System.String"}},"object":{"Graph":{"@Type":"6f9dac99","@Value":{"SpecialFunc":{"@Type":"0db3d7bb:Enum","@Value":"None"},"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)CR413S_Config(); \t\t\t//IO Configuration\n\nIOWrapper.READ_INPUTS(); \t//Call IOWrapper Main Program and Read Data from Inputs   \n\n\t\t\t\t\t\t\t//Put your Application program here \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\nTEST_PRG();\t\nIOWrapper.WRITE_OUTPUTS();\t//Call IOWrapper Main Program and Write Data to Outputs \n\n\n// RETRIEVE AND FORWARD CAN DATA\nCAN_DATA_RX();\nCAN_DATA_TX();\n\n// RETRIEVE DIGITAL INPUT VALUES\nInput_MN200S_1(uiChannel:=700);\nInput_MN200S_2(uiChannel:=701);\n\nInput_EStop_1(uiChannel:=100);\nInput_EStop_2(uiChannel:=101);\n\nInput_KT_Stop(uiChannel:=500);\nInput_KT_Start(uiChannel:=501);\n\n// ESTIMATE THE CURRENT OPERATION MODE\nEstimateOperationMode(\n\txInput_KT_Start := Input_KT_Start.xValueDigital,\n\txInput_KT_Stop := Input_KT_Stop.xValueDigital,\n\txInput_EStop_1 := Input_EStop_1.xValueDigital,\n\txInput_EStop_2 := Input_EStop_2.xValueDigital,\n\txInput_MN200S_1 := Input_MN200S_1.xValueDigital,\n\txInput_MN200S_2 := Input_MN200S_2.xValueDigital,\n\tdtCurrentOperationTime:=GVL.TimerOperationTime.CDT,\n\tdtLimitOperationTime:= UINT_TO_DT(CAN_RX.uiOperationTimeSpan)\n);\n\n// Estimate the PWM values that correspond to the desired speed\n// It is assumed that the motors are more or less a linear system \n// ->TargetPWMvalues are used as currentPWM values\n\nPI_Controller1(rTargetPwm_PI:=UINT_TO_REAL(CAN_RX.uiDesiredSpeed),\n\t\t\trCurrentPwm_PI:=UINT_TO_REAL(EVC.EVL.uiTargetPWMValue1),\n\t\t\tCurrentOperationMode :=GVL.CurrentOperationMode );\nPI_Controller2(rTargetPwm_PI:=UINT_TO_REAL(CAN_RX.uiDesiredSpeed),\n\t\t\trCurrentPwm_PI:=UINT_TO_REAL(EVC.EVL.uiTargetPWMValue2),\n\t\t\tCurrentOperationMode :=GVL.CurrentOperationMode );\n\t\t\t\t\nEVC.EVL.uiTargetPWMValue1:=PI_Controller1.uiOutputPwm;\t\nEVC.EVL.uiTargetPWMValue2:=PI_Controller2.uiOutputPwm;\t\n\n//Retrieve user inputs with KT buttons to release the start again\nKTUserTrigger(CLK:= Input_KT_Start.xValueDigital);\nEVC.EVL.xResetEStop:=KTUserTrigger.Q;\n","LineInfoPersistence":"(string)a45e625f-1b31-4fd3-900b-f9f443a5cee1_Impl_LineIds"}}}},"Interface":{"@Type":"a9ed5b7e","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)PROGRAM PLC_PRG\nVAR\n\ttest:UINT;\n\ttest2:REAL;\n\tInput_MN200S_1: ifmIOcommon.Input;\n\tInput_MN200S_2: ifmIOcommon.Input;\t\n\t\n\tInput_EStop_1: ifmIOcommon.Input;\n\tInput_EStop_2: ifmIOcommon.Input;\t\n\t\n\tInput_KT_Stop: ifmIOcommon.Input;\n\tInput_KT_Start: ifmIOcommon.Input;\n\t\n\tPI_Controller1: PI_Controller;\n\tPI_Controller2: PI_Controller;\n\t\n\tuiAppliedPwm:UINT;\n\tuiPWMratio: INT;\n\tKTUserTrigger: R_TRIG;\nEND_VAR\n(*\nIOWrapper V1.0.4.4\nifm ecomatic gmbh - VNC - pp \n\nThe licence free software is of average quality and suitable for normal use on common personal\ncomputers. According to the present state of software technology no guarantee can be\nassumed for the correct operation or absence of computer viruses nor for the removal of any\nfault which may occur. In case of an incorrect program ifm electronic gmbh cannot be held\nliable for cost incurred at the customer (e.g. maintenance, repair or rectification of faults).\nThe exclusion does not apply to damage for which liability is mandatory according to peremptory\nlegal provisions. Copyright by ifm electronic gmbh, Essen. No copies may be made without the\nwritten permission of ifm electronic gmbh. This also goes for printing images or text for business\nuse. We reserve the right to make technical alterations.\n*)","LineInfoPersistence":"(string)a45e625f-1b31-4fd3-900b-f9f443a5cee1_Decl_LineIds"}}}},"UniqueIdGenerator":"(string)803","POULevel":{"@Type":"8e575c5b:Enum","@Value":"Standard"},"ChildObjectGuids":{"@Type":"ArrayList:IList","@Value":[]},"AddAttributeSubsequent":"(bool)False"}},"TypeInfos":{"0db3d7bb":"{0db3d7bb-cde0-4416-9a7b-ce49a0124323}","3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","6f9dac99":"{6f9dac99-8de1-4efc-8465-68ac443b7d08}","8e575c5b":"{8e575c5b-1d37-49c6-941b-5c0ec7874787}","a9ed5b7e":"{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}","ArrayList":"System.Collections.ArrayList","bool":"System.Boolean","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","string":"System.String"}}},"FormatVersion":"1.0"}